swagger: "2.0"
info:
  title: OrganiCity Platform Management API
  description: Connect new sites to the OrganiCity platform, as well as perform the management of its related attributes
  version: "1.0.0"
host: organicity.eu
schemes:
  - https
basePath: /v1

securityDefinitions:
  oauth:
    type: oauth2
    flow: implicit
    authorizationUrl: https://organicity.eu/oauth/authorize/?client_id=CLIENT-ID&redirect_uri=REDIRECT-URI&response_type=token
    scopes:
      basic: to read any and all data related to OrganiCity
security:
  - oauth:
    - basic

paths:
  /sites:
    get:
      summary: retrieve the list of sites.
      description: ""
      security:
       - oauth:
         - basic
      produces:
        - application/json
      responses:
        200:
          description: an array of OC sites
          schema:
            type: array
            items:
              $ref: '#/definitions/sitedesc'
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: register a new OrganiCity site
      description: ""
      security:
       - oauth:
         - basic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: site
          description: site object that needs to be added to the facility
          required: true
          schema:
            $ref: "#/definitions/site"
      responses:
        "200":
          description: site added
          schema:
            $ref: "#/definitions/sitedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sites/{siteId}:
    get:
      summary: find site by ID
      description: ""
      security:
       - oauth:
         - basic
      operationId: getsiteById
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: ID of site that needs to be fetched
          required: true
          type: string
      responses:
        "404":
          description: site not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/sitedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: updates a site in the facility
      description: ""
      security:
       - oauth:
         - basic
      operationId: updatesiteWithForm
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: ID of site that needs to be updated. It MUST be the same ID as the one in the body
          required: true
          type: string
        - in: body
          name: site
          description: site object that needs to be updated
          required: true
          schema:
            $ref: "#/definitions/site"
      responses:
        "200":
          description: site updated
          schema:
            $ref: "#/definitions/sitedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: site not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: deletes a site
      description: ""
      security:
       - oauth:
         - basic
      operationId: deletesite
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site ID to delete
          required: true
          type: string
      responses:
        "200":
          description: site removed
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: site not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sites/{siteId}/services:
    get:
      summary: retrieve the list of services for a given site.
      description: ""
      security:
       - oauth:
         - basic
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site ID
          required: true
          type: string
      responses:
        200:
          description: an array of OC services
          schema:
            type: array
            items:
              $ref: '#/definitions/servicedesc'
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: register a new OrganiCity service for a given site
      description: ""
      security:
       - oauth:
         - basic
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site ID
          required: true
          type: string
        - in: body
          name: site
          description: service that needs to be added to the facility
          required: true
          schema:
            $ref: "#/definitions/service"
      responses:
        "200":
          description: site added
          schema:
            $ref: "#/definitions/servicedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sites/{siteId}/services/{serviceId}:
    get:
      summary: find service by ID
      description: ""
      security:
       - oauth:
         - basic
      operationId: getserviceById
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site ID
          required: true
          type: string
        - in: path
          name: serviceId
          description: ID of service that needs to be fetched
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/servicedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: site or service not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: updates a service in the facility
      description: ""
      security:
       - oauth:
         - basic
      operationId: updateserviceWithForm
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site ID
          required: true
          type: string
        - in: path
          name: serviceId
          description: ID of service that needs to be updated. It MUST be the same ID as the one in the body
          required: true
          type: string
        - in: body
          name: site
          description: service that needs to be updated
          required: true
          schema:
            $ref: "#/definitions/service"
      responses:
        "200":
          description: service updated
          schema:
            $ref: "#/definitions/servicedesc"
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: site or service not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: deletes a service
      description: ""
      security:
       - oauth:
         - basic
      operationId: deleteservice
      produces:
        - application/json
      parameters:
        - in: path
          name: siteId
          description: site id
          required: true
          type: string
        - in: path
          name: serviceId
          description: service id to be delete
          required: true
          type: string
      responses:
        "200":
          description: service removed
        401:
          description: authentication error
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: site or service not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  site:
    type: object
    required:
      - id
      - name
      - contact
    properties:
      id:
        type: string
        description: unique identifier representing a specific OC site. Only lowercases allowed
      name:
        type: string
        description: full site name
      contact:
        type: string
        format: email
        description: contact email address

  sitedesc:
    type: object
    required:
      - id
      - name
      - contact
      - prefix
      - since
    properties:
      id:
        type: string
        description: unique identifier representing a specific OC site. Only lowercases allowed
      name:
        type: string
        description: full site name
      contact:
        type: string
        format: email
        description: contact email address
      prefix:
        type: string
        description: urn
      since:
        type: string
        description: site registration date, i.e. 2014-01-01 T00:00Z

  service:
    type: object
    required:
      - type
      - implem
      - url
      - public
    properties:
      type:
        type: string
        description: one of context, historic or open_dataset
      implem:
        type: string
        description: implementation used to provide this service
      url:
        type: string
        description: endpoint URL
      public:
        type: boolean
  servicedesc:
    type: object
    required:
      - id
      - type
      - implem
      - url
      - since
      - public
    properties:
      id:
        type: integer
        format: int64
        description: a unique ID
      type:
        type: string
        description: one of context, historic or open_dataset
      implem:
        type: string
        description: implementation used to provide this service
      url:
        type: string
        description: endpoint URL
      since:
        type: string
        description: service registration date, ie 2014-01-01T00:00Z
      public:
        type: boolean

  Error:
    type: object
    required:
      - code
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string