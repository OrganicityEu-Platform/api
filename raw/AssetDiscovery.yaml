swagger: '2.0'
info:
  version: '0.1'
  title: Organicity Assets Discovery Service
  description: |
    This API aims to create the foundations for a novel urban data observatory in the form of a service that allow various stakeholders (data scientists, city decision makers, organisations and citizens) to explore, with the intent to act, mixed static and real-time urban and social data streams and their exploitation in experimentation.

    It comprises the following functionalities:
    - Searching and filtering assets using multiple options
    - Retrieving information about: services, sites and providers
    - Retrieving assets data
    - Retrieving experiments and the associated assets

    *This API is the core engine of the [Organicity Urban Data Observatory](http://observatory.organicity.eu/) and it is designed following the [OASC](http://oascities.org/) principles, as an extension of the [NGSI 9/10](https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FI-WARE_NGSI-10_Open_RESTful_API_Specification) standard, specially following the new [FIWARE-NGSI v2 Specification](http://telefonicaid.github.io/fiware-orion/api/v2/latest/)*

  termsOfService: 'http://www.organicity.eu'
  contact:
    name: Organicity Helpdesk
host: api.organicity.eu
basePath: /discovery/v0
securityDefinitions:
  oAuth:
    type: oauth2
    authorizationUrl: https://accounts.organicity.eu/
    flow: implicit
    description: |
      The Scenario Tool requires setting up an oAuth prior to performing actions that require authorisation.
paths:
  '/assets?{asset_urn}&{last_updated}&{type}&{sort}&{filter}&{order}&{offset}&{page}&{per}&{sample}&{query}':
    get:
      description: 'Retrieve an assets using multiple criteria'
      operationId: List All Assets_
      produces:
      - application/json
      parameters:
      - name: asset_urn
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter assets by their Unique Resource Name
      - name: last_updated
        in: path
        required: true
        x-is-map: false
        type: string
        format: date-time
        description: Filter assets by last updated date
      - name: type
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter access by type
      - name: sort
        in: path
        required: true
        x-is-map: false
        type: string
        description: Sort assets. Supported values are to be defined.
      - name: filter
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter assets. Supported values are to be defined.
      - name: order
        in: path
        required: true
        x-is-map: false
        type: string
        description: Order assets DESC or ASC.
      - name: offset
        in: path
        required: true
        x-is-map: false
        type: integer
        format: int32
        description: Return assets with the given offset of N results.
      - name: page
        in: path
        required: true
        x-is-map: false
        type: integer
        format: int32
        description: Return assets for the given page.
      - name: per
        in: path
        required: true
        x-is-map: false
        type: integer
        format: int32
        description: Return N assets per page.
      - name: sample
        in: path
        required: true
        x-is-map: false
        type: integer
        format: int32
        description: Return a random sample of N assets.
      - name: query
        in: path
        required: true
        x-is-map: false
        type: string
        description: Return a list of assets based on metadatadatatata search
      security:
        - oAuth: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items: 
              $ref: '#/definitions/Asset'
  '/assets/services':
    get:
      description: 'Return the services the assets belong to'
      operationId: List All Assets Services_
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items: 
              $ref: '#/definitions/Service'
  '/assets/services/{service}':
    get:
      description: 'Return a specific service'
      operationId: List Assets Service_
      produces:
      - application/json
      parameters:
      - name: service
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter assets by service
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Service'
  '/assets/sites':
    get:
      description: 'Return the sites the assets belong to'
      operationId: List All Assets Sites_
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items: 
              $ref: '#/definitions/Site'
  '/assets/sites/{site}':
    get:
      description: 'Return a specific site'
      operationId: List Assets Site_
      produces:
      - application/json
      parameters:
      - name: site
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter access by site
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Site'
  '/assets/providers':
    get:
      description: 'Return the providers the assets belong to'
      operationId: List All Assets Providers_
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Provider'
  '/assets/providers/{provider}':
    get:
      description: 'Return a specific provider'
      operationId: List Assets Provider_
      produces:
      - application/json
      parameters:
      - name: provider
        in: path
        required: true
        x-is-map: false
        type: string
        description: Filter access by provider
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Provider'
  '/assets/geo/search?{lat}&{long}&{radius}&{query}&{points}&{ip}&{city}':
    get:
      description: 'Return a list of assets filtered by geolocation'
      operationId: Get_Assets geo search_
      produces:
      - application/json
      parameters:
      - name: lat
        in: path
        required: true
        x-is-map: false
        type: string
        description: Center latitude for geographical queries
      - name: long
        in: path
        required: true
        x-is-map: false
        type: string
        description: Center longitude for geographical queries
      - name: radius
        in: path
        required: true
        x-is-map: false
        type: string
        description: Spherical radius for geographical queries
      - name: query
        in: path
        required: true
        x-is-map: false
        type: string
        description: At the moment only query="polygon" is supported
      - name: points
        in: path
        required: true
        x-is-map: false
        type: string
        description: Array of geographical coordinates
      - name: ip
        in: path
        required: true
        x-is-map: false
        type: string
        description: IP address
      - name: city
        in: path
        required: true
        x-is-map: false
        type: string
        description: "City name for geographical queries"
      responses:
        '200':
          description: ''
          schema:
            type: array
            items: 
              $ref: '#/definitions/Asset'
  '/assets/metadata?{query}':
    get:
      description: 'Return a list of assets filtered by specific metadata'
      operationId: Get_Assets search metadata_
      produces:
      - application/json
      parameters:
      - name: query
        in: path
        required: true
        x-is-map: false
        type: string
        description: metadata query string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
  '/assets/{asset_urn}':
    get:
      description: 'Return an assets by URN'
      operationId: Retrieve Asset by URN_
      produces:
      - application/json
      parameters:
      - name: asset_urn
        in: path
        required: true
        x-is-map: false
        type: string
        description: Unique Resource Name of the asset
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Asset'
  '/assets/{asset_urn}/data':
    get:
      description: The data model follows NGSI 9/10 model defined in Organicity Assets Directory.
      operationId: Retrieve Asset data by URN_
      produces:
      - application/json
      parameters:
      - name: asset_urn
        in: path
        required: true
        x-is-map: false
        type: string
        description: Unique Resource Name of the asset
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Asset'
  '/assets/{asset_urn}/data/v2':
    get:
      description: The data model follows NGSI v2 approach removing the original XML legacy. It also groups the data based on the Assets structure defined in D2.1 Section 4.5.1, this improve performance on data parsing and presentation.
      operationId: Retrieve Asset data in NGSI v2 by URN_
      produces:
      - application/json
      parameters:
      - name: asset_urn
        in: path
        required: true
        x-is-map: false
        type: string
        description: Unique Resource Name of the asset
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Asset'
  '/assets/{asset_urn}/nearby?{radius}&{city}&{query}&{points}':
    get:
      description: 'Retrieve assets geograpically close to other assets'
      operationId: Search Assets nearby to URN_
      produces:
      - application/json
      parameters:
      - name: asset_urn
        in: path
        required: true
        x-is-map: false
        type: string
        description: Unique Resource Name of the asset
      - name: radius
        in: path
        required: true
        x-is-map: false
        type: string
        description: Spherical radius for geographical queries
      - name: query
        in: path
        required: true
        x-is-map: false
        type: string
        description: At the moment only query="polygon" is supported
      - name: points
        in: path
        required: true
        x-is-map: false
        type: string
        description: Array of geographical coordinates. Assets lat and long are taken as starting point.
      - name: city
        in: path
        required: true
        x-is-map: false
        type: string
        description: "City name for geographical queries"
      responses:
        '200':
          description: ''
          schema:
            type: object
  '/experiments/':
    get:
      description: 'Retrieve all the experiments'
      operationId: List All Experiments_
      produces:
      - application/json
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Experiment'
  '/experiments/{experiment_id}':
    get:
      description: 'Retrieve an experiment by the experiment id'
      operationId: Retrieve an Experiments_
      produces:
      - application/json
      parameters:
      - name: experiment_id
        in: path
        required: true
        x-is-map: false
        type: string
        description: "Unique Resource Name of the experiment"
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Experiment'
definitions:
  Service:
    title: Assets Service response
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      related:
        type: object
    required:
    - id
    - type
    - related
    example: {
            "id": "1",
            "type": "Environmental",
            "related":
                {
                    "cities": 
                        [
                            { 
                                "type": "city",
                                "id": "1",
                                "metadata":
                                    {
                                        "name": "Barcelona",
                                        "position": 
                                        {
                                            "latitude": 41.3851,
                                            "longitude": 2.1734
                                        },
                                    },
                                "attributes":
                                    {
                                        "assets": 254,
                                        "online": 135,
                                        "offline": 119
                                    }
                            }   
                        ]
                }
            }
  Site:
    title: Assets Site response
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      context:
        type: object
      attributes:
        type: object
      links:
        type: object
    required:
    - id
    - type
    - context
    - attributes
    - links
    example: {
                "id":"urn:oc:entity:barcelona",
                "type": "city",
                "context":
                    {
                        "name": "Barcelona",
                        "position": 
                            {
                                "latitude": 41.3851,
                                "longitude": 2.1734
                            },
                    },
                "attributes":
                    {
                        "assets": 254,
                        "online": 135,
                        "offline": 119
                    },
                "links": 
                    {
                        "self": "/assets/sites/urn:oc:entity:barcelona",
                        "related": 
                            {
                                "href": "https://en.wikipedia.org/wiki/Barcelona"
                            },
                        "avatar": 
                            {
                                "href": "http://cliparts.co/cliparts/LTd/jL4/LTdjL4djc.jpg",
                            }
                    },
            } 
  Provider:
    title: Assets Provider response
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      links:
        type: object
      related:
        type: object
    required:
    - id
    - type
    - links
    - related
    example: {
              "id": "135aa31",
              "type": "phone",
              "links": 
                  {
                      "related": 
                          {
                              "href": "http://en.wikipedia.com/wiki/phone"
                          }
                  },
              "related":
                  {
                      "cities": 
                          [
                              { 
                                  "type": "city",
                                  "id": "1",
                                  "metadata":
                                      {
                                          "name": "Barcelona",
                                          "position": 
                                              {
                                                  "latitude": 41.3851,
                                                  "longitude": 2.1734
                                              },
                                      },
                                  "attributes":
                                      {
                                          "assets": 254,
                                          "online": 135,
                                          "offline": 119                                            
                                      }
                              }   
                          ]
                  }

              }
  Asset:
    title: Assets response
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      context:
        type: object
      related:
        type: object
    required:
    - id
    - type
    - context
    - related
    example:  {
              "id": "urn:oc:entity:london:smartphone:phone:9",
              "type": "smartphone",
              "context": {
                "service": "smartphone",
                "provider": "phone",
                "group": null,
                "name": "9",
                "last_reading_at": "2016-03-10T18:03:05.000Z",
                "experiment": "56991853005557f52f277a88",
                "position": {
                  "latitude": 51.522096410000003175,
                  "longitude": -0.10705950999999999662,
                  "city": "London",
                  "country_code": "GB",
                  "country": "Great Britain"
                }
              },
              "related": {
                "service": {
                  "type": "smartphone"
                },
                "provider": {
                  "type": "phone"
                },
                "group": {
                  "type": null
                },
                "site": {
                  "id": "urn:oc:entity:london",
                  "type": "city",
                  "links": {
                    "self": "/assets/sites/urn:oc:entity:london",
                    "related": {
                      "href": "https://en.wikipedia.org/wiki/London"
                    },
                    "avatar": {
                      "href": "http://cliparts.co/cliparts/LTd/jL4/LTdjL4djc.jpg"
                    }
                  },
                  "position": {
                    "latitude": 51.522096410000003175,
                    "longitude": -0.10705950999999999662,
                    "city": "London",
                    "country_code": "GB",
                    "country": "Great Britain"
                  },
                  "name": "London"
                },
                "experiment": {
                  "id": "56991853005557f52f277a88",
                  "type": "audio",
                  "links": {
                    "self": "/experiments/56991853005557f52f277a88",
                    "related": {
                      "href": "http://www.greatexperiment.org/organicity"
                    }
                  }
                }
              }
             } 
  Experiment:
    title: Experiment response
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      context:
        type: object
      experimenterId:
        type: integer
      registered:
        type: string
        format: date-time   
      expirationTime:
        type: string
        format: date-time  
      startingTime:
        type: string
        format: date-time   
      status:
        type: string 
      experimentArea:
        type: object
        properties:
          latitude: 
            type: string
          longitude: 
            type: string
      keywords:
        type: array
        items: 
          type: string
      assets:
        type: array
        items: 
          $ref: '#/definitions/Asset'
    required:
    - id
    - type
    - context
    example: {
                "id": "56991853005557f52f277a88",
                "type": "audio",
                "experimenterId": "da41542651515151514141",
                "registered": "2016-03-10T18:03:05.000Z",
                "expirationTime": "2016-10-10T18:03:05.000Z",
                "startingTime": "2016-04-10T18:03:05.000Z",
                "status": "active",
                "experimentArea": [{
                  "position": {
                    "latitude": 51.522096410000003175,
                    "longitude": -0.10705950999999999662
                  }
                }],
                "keywords": ["sound", "device", "iot"],
                "assets": [{
                  "id": "urn:oc:entity:london:smartphone:phone:9",
                  "type": "smartphone",
                  "context": {
                    "experiment": "56991853005557f52f277a88",
                    "service": "smartphone",
                    "provider": "phone",
                    "group": null,
                    "name": "9",
                    "last_reading_at": "2016-03-10T18:03:05.000Z",
                    "position": {
                      "latitude": 51.522096410000003175,
                      "longitude": -0.10705950999999999662,
                      "city": "London",
                      "country_code": "GB",
                      "country": "Great Britain"
                    }
                  },
                  "related": {
                    "service": {
                      "type": "smartphone"
                    },
                    "provider": {
                      "type": "phone"
                    },
                    "group": {
                      "type": null
                    },
                    "site": {
                      "id": "urn:oc:entity:london",
                      "type": "city",
                      "links": {
                        "self": "/assets/sites/urn:oc:entity:london",
                        "related": {
                          "href": "https://en.wikipedia.org/wiki/London"
                        },
                        "avatar": {
                          "href": "http://cliparts.co/cliparts/LTd/jL4/LTdjL4djc.jpg"
                        }
                      },
                      "position": {
                        "latitude": 51.522096410000003175,
                        "longitude": -0.10705950999999999662,
                        "city": "London",
                        "country_code": "GB",
                        "country": "Great Britain"
                      },
                      "name": "London"
                    }
                  }
                }]
              }
